package main.java.exam.dip;class Smoker {    // 흡연자는 담배를 피운다.    // 흡연자는 전자담배를 필수도 있고, 연초를 피울수도 있고, 궐련형 담배를 피울수도 있다.    // 하지만 현재 Smoker 클래스는 인스턴스 클래스 변수로 연초 담배에만 의존하고 있다.    // DIP란, 추상을 완전히 구현한 하위 모듈에 의존하는 것이 아니라 추상적인 상위 모듈에 의존해야 한다는 개념이다.    // 따라서 Smoker 클래스는 의존 역전 원칙을 위반한다.    //    private final Tobacco tobacco;    //    //    Smoker(Tobacco tobacco) {    //        this.tobacco = tobacco;    //    }    // 이를 해결 하려면 추상적인 상위 모듈을 의존하면 된다.    private final Cigarette cigarette;    Smoker(Cigarette cigarette) {        this.cigarette = cigarette;    }    public void smoke() {        System.out.println(cigarette.getName() + "을 피웁니다.");    }}